;ls: Directory listing.
;
*GET	DOSCALLS.HDR
*GET	EXTERNAL.HDR
*GET	ASCII.HDR
;
	ORG	PROG_START
	DEFW	BASE
	DEFW	THIS_PROG_END
	DEFW	TERMINATE
	DEFW	TERMINATE
;End of program load info.
;
	COM	'<ls 1.1a 24-Aug-87>'
	ORG	BASE+100H
START	LD	SP,START
	CALL	FLAGS
;
	LD	(WILDARG),HL
SETZ	LD	A,(HL)
	OR	A
	JR	Z,DRIVE
	INC	HL
	CP	CR
	JR	NZ,SETZ
	DEC	HL
	LD	(HL),0
;
DRIVE	LD	A,CR
	CALL	STD_OUT
	CALL	ONE_DRIVE
	JR	NZ,FINISH
	LD	HL,DRIVE_NO
	INC	(HL)
	JR	DRIVE
;
FINISH
	XOR	A
	JP	TERMINATE
;
ONE_DRIVE
	LD	HL,BUFF_IN
	LD	(DIR_POSN),HL
	LD	A,(DRIVE_NO)
	LD	(FCB_DRIVE),A
	LD	DE,FCB_IN
	LD	HL,FCB_DR
	LD	BC,32
	LDIR
	LD	DE,FCB_IN
	LD	HL,BUFF_IN
	LD	B,0
	CALL	DOS_OPEN_EX
	RET	NZ
;
	LD	A,(FCB_IN+1)
	AND	0F8H
	OR	5
	LD	(FCB_IN+1),A
;
	LD	HL,0002H	;rba of 000200H
	LD	C,0
	CALL	DOS_POS_RBA
	JP	NZ,ERROR
;
	XOR	A
	LD	(COLUMN),A
;
LOOP	LD	A,(COLUMN)
	CP	4
	JR	NZ,LS_01
	XOR	A
	LD	(COLUMN),A
	LD	A,CR
	CALL	STD_OUT
LS_01
	LD	B,32
	LD	HL,SLOT_BUF
LS_02	CALL	GETDIR
	JR	NZ,LS_05	;If eof
	LD	(HL),A
	INC	HL
	DJNZ	LS_02
;
				;record not moved to buff
LS_03	LD	A,(SLOT_FLAGS)
	AND	0D8H		;must be active,
	CP	10H		;non sys,
	JR	NZ,LS_01	;non invisible.
	CALL	MAKE_NAME
;
	LD	HL,(WILDARG)
	LD	A,(HL)
	OR	A
	JR	Z,LS_04	;List all
;
	PUSH	BC		;Save spaces indent
	PUSH	HL
	LD	HL,NAMEBUF
	PUSH	HL
	CALL	_CHKWILD
	POP	BC
	POP	BC
	POP	BC		;Restore space count
	LD	A,H
	OR	L
	JR	Z,LS_01
;
LS_04	CALL	PRINT_NAME
	LD	HL,COLUMN
	INC	(HL)
	JR	LOOP
;
LS_05	LD	A,CR
	CALL	STD_OUT
	CP	A
	RET
;
MAKE_NAME
	LD	HL,SLOT_NAME
	LD	DE,NAMEBUF
	LD	B,8
	LD	C,0
PN_01	LD	A,(HL)
	CP	' '
	JR	Z,PN_02
	LD	(DE),A
	INC	DE
	INC	C
	INC	HL
	DJNZ	PN_01
PN_02
	LD	HL,SLOT_EXT
	LD	A,(HL)
	CP	' '
	JR	Z,PN_04
	LD	A,'.'	;Sep
	LD	(DE),A
	INC	DE
	INC	C
	LD	B,3
PN_03	LD	A,(HL)
	CP	' '
	JR	Z,PN_04
	LD	(DE),A
	INC	DE
	INC	C
	INC	HL
	DJNZ	PN_03
PN_04
	XOR	A
	LD	(DE),A
	LD	A,14
	SUB	C
	LD	B,A
	RET
;
PRINT_NAME
	PUSH	BC
	LD	HL,NAMEBUF
PN_11	LD	A,(HL)
	OR	A
	JR	Z,PN_12
	CALL	STD_OUT
	INC	HL
	JR	PN_11
PN_12
	POP	BC
PN_05	LD	A,' '
	CALL	STD_OUT
	DJNZ	PN_05
	RET
;
GETDIR
	PUSH	HL
	LD	HL,(DIR_POSN)
	LD	A,L
	CP	BUFF_IN.AND.255
	CALL	Z,READDIR
	LD	HL,(DIR_POSN)
	LD	A,(HL)
	INC	HL
	LD	(DIR_POSN),HL
	POP	HL
	CP	A
	RET
;
READDIR
	PUSH	DE
	LD	DE,FCB_IN
	CALL	DOS_READ_SECT
	LD	HL,BUFF_IN
	LD	(DIR_POSN),HL
	POP	DE
	CP	6
	RET	Z
	POP	IY		;Return address
	POP	HL		;hl pushed
	RET
;
ERROR	PUSH	AF
	OR	80H
	CALL	DOS_ERROR
	POP	AF
	JP	TERMINATE
;
FLAGS	LD	A,(HL)
	CP	'-'
	RET	NZ
	INC	HL
FL_1	LD	A,(HL)
	INC	HL
	CP	' '
	JR	Z,FLAGS		;wot about -l     *
	OR	A
	RET	Z
	CP	CR
	RET	Z
	CP	'L'
	JR	NZ,FL_2
	LD	(L_FLAG),A
	JR	FL_1
FL_2	JR	FL_1
;
*GET	CALL
*GET	WILD
;
*GET	ROUTINES
;
WILDARG	DEFW	0	;Addr of wildcard if any.
NAMEBUF	DEFS	16	;Name buffer.
L_FLAG	DEFB	0	;Long listing
;
DRIVE_NO	DEFB	'0'
FCB_DR	DEFM	'dir.sys:'
FCB_DRIVE	DEFB	'0'
	DEFB	ETX
	DC	32-10,0
FCB_IN	DEFS	32
;
BUFF_IN	DEFS	256
DIR_POSN	DEFW	0
;
SLOT_BUF
SLOT_FLAGS	DEFB	0
SLOT_FILL1	DEFS	4
SLOT_NAME	DEFS	8
SLOT_EXT	DEFS	3
SLOT_FILL2	DEFS	16
;
COLUMN		DEFB	0
;
THIS_PROG_END	EQU	$
;
	END	START
