;help: super user help program
;
*GET	DOSCALLS.HDR
*GET	EXTERNAL.HDR
*GET	ASCII.HDR
;  
	ORG	PROG_START
	DEFW	BASE
	DEFW	THIS_PROG_END
	DEFW	TERMINATE
	DEFW	TERMINATE
;End of program load info.
;
	COM	'<Help 1.5h 23-Jan-88>'
	ORG	BASE+100H
START	LD	SP,START
;
	LD	A,(HL)
	CP	CR
	JR	Z,NO_NAME
	OR	A
	JR	Z,NO_NAME
;
	CALL	NAME_XLATE
;
NO_NAME
	PUSH	HL
	CALL	SIGNON
	POP	HL
	CALL	DEFAULT
CONTROL
	CALL	READBYTE
	LD	(CTRL),A
	CP	'0'		;0
	JR	Z,FILE_EXIT
	CP	'1'		;1xxText....
	JR	Z,CHOICE
	CP	'2'		;2xxFilename...
	JR	Z,SWAPFILE
	CP	'3'		;3xxComment
	JP	Z,SECTION_ID
	CP	'4'		;4xxComment...
	JR	Z,JUMP
	CP	'5'		;5
	JP	Z,PAUSE
	CP	'6'		;6xxFilename.
	JP	Z,JUMPINTO
;is not a control byte so print out line.
PRINT_LINE
	LD	(CHAR),A
	LD	DE,$2
	CALL	$PUT
	LD	A,(CHAR)
	CP	CR
	JR	Z,CONTROL
	CALL	READBYTE
	JR	PRINT_LINE
;
JUMP	CALL	READ_SCNM
	CALL	FILE_POSN
	JR	CONTROL
FILE_EXIT
;;	LD	HL,M_EOF
;;	LD	DE,$2
;;	CALL	MESS_0
	CALL	CLOSE_F
	LD	A,0
	CALL	TERMINATE
;
SWAPFILE
	CALL	READ_SCNM
	CALL	GET_FNAME
	JR	CONTROL
;
JUMPINTO
	CALL	READ_SCNM
	CALL	GET_FNAME
	CALL	FILE_POSN
	JP	CONTROL
;
CHOICE	LD	HL,M_SELECT
	LD	DE,$2
	CALL	MESS_0
	CALL	Z_PTR
NXT_CHOICE
	CALL	INC_NUM
	CALL	READ_SCNM
	CALL	STOR_SCNM
	CALL	PRINT_CHOICE
	CALL	READBYTE
	CP	'1'
	JR	Z,NXT_CHOICE
CH_LOOP
	LD	HL,M_CHOICE
	LD	DE,$2
	CALL	MESS_0
	CALL	ENTR_NUMB
	JR	NZ,CH_LOOP
	LD	A,(NUM)
	CALL	RETRV_SCNM
	CALL	FILE_POSN
	JP	CONTROL
;
SECTION_ID
	CALL	READBYTE
	CP	CR
	JR	NZ,SECTION_ID
	JP	CONTROL
;
PAUSE	CALL	READBYTE
	CP	CR
	JR	NZ,PAUSE
	LD	HL,M_PAUSE
	LD	DE,$2
	CALL	MESS_0
;
P_1	LD	DE,$2
	CALL	$GET
	CP	1
	JR	Z,P_EXIT
	CP	CR
	JR	NZ,P_1
	JP	CONTROL
P_EXIT	CALL	CLOSE_F
	XOR	A
	JP	TERMINATE
;
SIGNON	LD	HL,M_HELP
	LD	DE,$2
	CALL	MESS_0
	RET
;
DEFAULT
	LD	A,(HL)
	CP	CR
	JR	NZ,DEF_1
	LD	HL,F_DEFLT
DEF_1	LD	DE,FCB_H
	CALL	DOS_EXTRACT
	LD	DE,FCB_H
	LD	HL,HLP
	CALL	DOS_EXTEND
	LD	DE,FCB_COPY
	LD	HL,FCB_H
	LD	BC,32
	LDIR
	LD	DE,FCB_H
	LD	HL,BUFF_H
	LD	B,0
	CALL	DOS_OPEN_EX
	JP	NZ,OPEN_ERROR
;check if file is proper HELP file
	LD	A,(FCB_H+2)
	BIT	1,A
	RET	NZ
	LD	HL,M_FILBAD
	LD	DE,$2
	CALL	MESS_0
	LD	A,0
	JP	TERMINATE
;
OPEN_ERROR
	LD	HL,M_NOTHELP
	LD	DE,$2
	CALL	MESS_0
	LD	A,0
	JP	TERMINATE
READBYTE
	PUSH	DE
	LD	DE,FCB_H
	CALL	$GET
	POP	DE
	SCF
	CCF		;reset carry flag leaving Z asis
	RET	Z
;error. Must be 1ch or 1dh
	CP	1CH
	JR	Z,RB_EOF
	CP	1DH
	JP	NZ,ERROR
RB_EOF	LD	A,'0'
	CP	A
	SCF		;set EOF flag.
	RET
;
CLOSE_F
	LD	DE,FCB_H
	CALL	DOS_CLOSE
	JP	NZ,ERROR
	RET
;
READ_SCNM
	CALL	READBYTE
	LD	(SCNM_1),A
	CALL	READBYTE
	LD	(SCNM_2),A
	RET
;
GET_FNAME
	LD	HL,FILE_NAME
GF_1	PUSH	HL
	CALL	READBYTE
	POP	HL
	LD	(HL),A
	INC	HL
	CP	CR
	JR	NZ,GF_1
	LD	HL,FILE_NAME
	CALL	DEF_1
	RET
;
Z_PTR	LD	HL,SCNM_BUFF
	LD	(SCNM_PTR),HL
	XOR	A
	LD	(NUMBER),A
	RET
;
INC_NUM	LD	A,(NUMBER)
	INC	A
	LD	(NUMBER),A
	RET
;
STOR_SCNM
	LD	HL,(SCNM_PTR)
	LD	A,(SCNM_1)
	LD	(HL),A
	INC	HL
	LD	A,(SCNM_2)
	LD	(HL),A
	INC	HL
	LD	(SCNM_PTR),HL
	RET
;
PRINT_CHOICE
	LD	A,(NUMBER)
	CALL	TO_DEC
	LD	DE,$2
PC_1	CALL	READBYTE
	PUSH	AF
	CALL	$PUT
	POP	AF
	CP	CR
	JR	NZ,PC_1
	RET
;
ENTR_NUMB
	LD	HL,NUM_BUFF
	LD	B,2
	CALL	40H
	LD	A,0
	JP	C,TERMINATE
	JR	EN_2
EN_1	XOR	A
	CP	1
	RET
EN_2	LD	B,0
EN_3	LD	A,(HL)
	CP	CR
	JR	Z,EN_4
	SUB	'0'
	CP	10
	JR	NC,EN_1
	LD	C,A
	LD	A,B
	ADD	A,A
	ADD	A,A
	ADD	A,B
	ADD	A,A
	ADD	A,C
	LD	B,A
	INC	HL
	JR	EN_3
EN_4	LD	A,B
	CP	0
	JR	Z,EN_1
	LD	A,(NUMBER)
	CP	B
	JR	C,EN_1
	LD	A,B
	LD	(NUM),A
	CP	A
	RET
;
RETRV_SCNM
	DEC	A
	ADD	A,A
	LD	C,A
	LD	B,0
	LD	HL,SCNM_BUFF
	ADD	HL,BC
	LD	A,(HL)
	LD	(SCNM_1),A
	INC	HL
	LD	A,(HL)
	LD	(SCNM_2),A
	RET
;
FILE_POSN
	LD	A,(CTRL)
	CP	'1'
	JR	Z,CTRL_2	;no rewind for choice
;first rewind FCB.
	LD	DE,FCB_H
	CALL	DOS_REWIND
	JP	NZ,ERROR
CTRL_2	CALL	READBYTE
	RET	C		;return if EOF...
	CP	'3'		;section id.
	JR	Z,FP_2
FP_1	CP	CR
	JR	Z,CTRL_2
	CALL	READBYTE
	JR	FP_1
;
FP_2	CALL	READBYTE
	LD	E,A
	CALL	READBYTE
	LD	D,A
	LD	A,(SCNM_1)
	LD	L,A
	LD	A,(SCNM_2)
	LD	H,A
	OR	A
	SBC	HL,DE		;2 character compare.
	JR	Z,FP_3
	CALL	READBYTE
	JR	FP_1
;found!
FP_3	CALL	READBYTE
	CP	CR
	JR	NZ,FP_3
	RET
;
TO_DEC
	LD	B,A
TD_1	XOR	A
	LD	(FLAG),A
	LD	C,100
	CALL	DEC_1
	LD	C,10
	CALL	DEC_1
	LD	A,1
	LD	(FLAG),A
	LD	C,1
	CALL	DEC_1
	LD	HL,M_COLON
	LD	DE,$2
	CALL	MESS_0
	RET
;
DEC_1	LD	A,B
	LD	D,'0'-1
D1_1	INC	D
	SUB	C
	JR	NC,D1_1
	ADD	A,C
	LD	B,A
	LD	A,D
	CP	'0'
	JR	NZ,D1_3
	LD	A,(FLAG)
	OR	A
	JR	NZ,D1_2
	LD	D,' '
D1_2	PUSH	BC
	LD	A,D
	LD	DE,$2
	CALL	$PUT
	POP	BC
	RET
D1_3	LD	A,1
	LD	(FLAG),A
	JR	D1_2
;
ERROR	PUSH	AF
	OR	80H
	CALL	DOS_ERROR
	LD	HL,M_SORRY
	LD	DE,$2
	CALL	MESS_0
;
	LD	HL,M_ERROR
	CALL	LOG_MSG
	POP	AF
	CALL	PRINT_DEC	;Sorry, boss!
	LD	HL,FCB_COPY
	CALL	LOG_MSG
;
	LD	DE,FCB_H
	CALL	DOS_CLOSE
	LD	A,0
	JP	TERMINATE
;
PRINT_DEC
	LD	H,'0'-1
PD_1	INC	H
	SUB	10
	JR	NC,PD_1
	ADD	A,10
	ADD	A,'0'
	PUSH	AF
	LD	A,H
	LD	(LOG_DEC_1),A
	POP	AF
	LD	(LOG_DEC_2),A
	LD	HL,LOG_DEC
	CALL	LOG_MSG
	RET
;
NAME_XLATE
	LD	(SAVED_NAME),HL
	LD	DE,XLATE_TABLE
XLATE_LOOP
	LD	A,(DE)
	OR	A
	JR	Z,NO_XLATE
	LD	HL,(SAVED_NAME)
	CALL	STR_CI_CMP_CR
	JR	Z,DO_XLATE
XL_01	LD	A,(DE)
	INC	DE
	OR	A
	JR	NZ,XL_01
XL_02	LD	A,(DE)
	INC	DE
	OR	A
	JR	NZ,XL_02
	JR	XLATE_LOOP
;
NO_XLATE
	LD	HL,(SAVED_NAME)
	RET
;
DO_XLATE
	LD	A,(DE)
	INC	DE
	OR	A
	JR	NZ,DO_XLATE
	LD	A,(DE)
	LD	(SCNM_1),A
	INC	DE
	LD	A,(DE)
	LD	(SCNM_2),A
	INC	DE
	EX	DE,HL
	CALL	DEF_1
	CALL	FILE_POSN
	JP	CONTROL
;
STR_CI_CMP_CR
	LD	A,(DE)
	OR	A
	JR	Z,POSS_COMPARE
	CALL	CI_CMP		;(hl) to (de)
	RET	NZ
	INC	HL
	INC	DE
	JR	STR_CI_CMP_CR
POSS_COMPARE
	LD	A,(HL)
	CP	' '
	RET	Z
	OR	A
	RET	Z
	CP	CR
	RET	;z or nz
;
*GET	ROUTINES
;
;data follows.
;
SAVED_NAME	DEFW	0
;
XLATE_TABLE
;First generic names & random things people will type
	DEFM	'file',0,'STxfer',ETX,0
	DEFM	'transfer',0,'STxfer',ETX,0
	DEFM	'zork',0,'STinfocom',ETX,0
	DEFM	'zork1',0,'STinfocom',ETX,0
	DEFM	'unix',0,'STdos',ETX,0
	DEFM	'zeta',0,'STdefault',ETX,0
;Then the names of real commands
	DEFM	'chat',0,'A1command2',ETX,0
	DEFM	'date',0,'A2command2',ETX,0
	DEFM	'dirall',0,'A3command2',ETX,0
	DEFM	'direct',0,'A4command2',ETX,0
	DEFM	'help',0,'A5command2',ETX,0
	DEFM	'id',0,'A6command2',ETX,0
	DEFM	'kill',0,'A7command2',ETX,0
	DEFM	'menu',0,'A9command2',ETX,0
	DEFM	'passwd',0,'B0command2',ETX,0
	DEFM	'upload',0,'B1command2',ETX,0
	DEFM	'userlist',0,'B2command2',ETX,0
	DEFM	'voice',0,'B3command2',ETX,0
;
	DEFM	'addlf',0,'A1commands',ETX,0
	DEFM	'cat',0,'A2commands',ETX,0
	DEFM	'comment',0,'A3commands',ETX,0
	DEFM	'dir',0,'STdir',ETX,0
	DEFM	'free',0,'A5commands',ETX,0
	DEFM	'list',0,'A6commands',ETX,0
	DEFM	'sort',0,'A7commands',ETX,0
	DEFM	0
;
M_NOTHELP
	DEFM	'Help subject not found, sorry.',CR
	DEFM	'Type "HELP" for a list of help subjects.',CR,0
;
M_COLON	DEFM	': ',0
;
M_FILBAD DEFM	'Requested file not a proper HELP format file!',CR,0
;
M_PAUSE	DEFM	'Hit <CR> to continue',07H,CR,0
;
CTRL		DEFB	0
CHAR		DEFB	0
NUM		DEFB	0
SCNM_1		DEFB	0
SCNM_2		DEFB	0
NUMBER		DEFB	0
FLAG		DEFB	0
SCNM_PTR	DEFW	0
;
FCB_H		DC	32,0
FCB_COPY	DC	32,0
BUFF_H		DC	256,0
FILE_NAME	DC	16,0
NUM_BUFF	DC	5,0
;
F_DEFLT		DEFM	'DEFAULT',CR
HLP		DEFM	'HLP'
;
;;M_EOF	DEFM	'**',CR,0	; End of Help **',CR,0
M_SELECT
	DEFM	CR,0	;Select one...
M_CHOICE
	DEFM	CR,'Help # ',0
M_HELP	DEFM	CR,CR,0
LOG_DEC
LOG_DEC_1	DEFB	'x'
LOG_DEC_2	DEFB	'x'
	DEFM	'. In file ',CR,0
;
M_SORRY	DEFM	'Sorry about that!',CR,0
M_ERROR	DEFM	'(HELP) Error # ',0
;
SCNM_BUFF
	DEFS	1024
	NOP
;
THIS_PROG_END	EQU	$
;
	END	START
