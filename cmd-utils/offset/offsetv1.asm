;OFFSET/EDT: OFFSET A /CMD FILE FOR NON-DOS.
; CREATION DATE: TUESDAY 29TH NOVEMBER, 1983.
	ORG	5200H
	DEFS	256
OFFSET	LD	SP,OFFSET-2
	LD	HL,COMBUFF
	CALL	NEXTWORD
	PUSH	HL
	LD	DE,FCB1
	CALL	EXTRACT	;EXTRACT FILESPEC.
	POP	HL
	CALL	NEXTWORD
	LD	DE,FCB2
	CALL	EXTRACT
	XOR	A
	LD	(T),A
	LD	(N),A
	LD	(NUM),A
	LD	HL,BLKTBL2
	LD	(BLK2),HL
	LD	IX,BLKTBL+4
	LD	HL,DEFEXT
	LD	DE,FCB1
	CALL	EXTEND
	LD	HL,DEFEXT
	LD	DE,FCB2
	CALL	EXTEND
	LD	HL,BUFFER1
	LD	DE,FCB1
	LD	B,0
	CALL	OPEN>EX
	JP	NZ,DOSERR
SEARCH	CALL	READ1
	CP	2
	JR	Z,EXECADD
	CP	5
	JR	Z,SKIP
	CP	31
	JR	Z,SKIP
;ASSUME LOAD BLOCK.
	CALL	READ1
	LD	B,A
	CALL	READ1
	LD	L,A
	CALL	READ1
	LD	H,A
	LD	(IX+0),L
	LD	(IX+1),H
	INC	IX
	INC	IX
	DEC	B
	DEC	B
LDBLK	CALL	READ1
	INC	HL
	DJNZ	LDBLK
	LD	(IX+0),L
	LD	(IX+1),H
	INC	IX
	INC	IX
	LD	A,(N)
	INC	A
	LD	(N),A
	JR	SEARCH
SKIP	CALL	READ1
	LD	B,A
SKYP	CALL	READ1
	DJNZ	SKYP
	JR	SEARCH
EXECADD	LD	DE,FCB1
	CALL	CLOSE
	JP	NZ,DOSERR
	LD	A,(N)
	LD	(SAFE),A
	CALL	BUBBLE
	LD	A,(SAFE)
	LD	(N),A
	LD	HL,BLKTBL+4
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
L110	CALL	INCT
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,BLKTBL
	ADD	HL,DE
	CALL	GET2
	EX	DE,HL
	LD	(ST),HL
	CALL	POKNTB
	EX	DE,HL
	CALL	GET2
	EX	DE,HL
	LD	(EN),HL
	EX	DE,HL
LOST	CALL	GET2
	EX	DE,HL
	LD	(ST1),HL
	EX	DE,HL
	CALL	GET2
	EX	DE,HL
	LD	(EN1),HL
	EX	DE,HL
	LD	A,(N)
	LD	B,A
	LD	A,(T)
	CP	B
	JR	NZ,LOSV01
	LD	HL,(EN)
	CALL	POKNTB
	JP	PART2
LOSV01	LD	HL,(ST1)
	EX	DE,HL
	LD	HL,(EN)
	OR	A
	SBC	HL,DE
	JR	NC,LOSV12
	LD	HL,(EN)
	CALL	POKNTB
	JR	L110
LOSV12	LD	HL,(EN)
	EX	DE,HL
	LD	HL,(EN1)
	OR	A
	SBC	HL,DE
	JR	C,LOSV03
	LD	HL,(EN1)
	LD	(EN),HL
LOSV03	CALL	INCT
	INC	HL
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,BLKTBL
	ADD	HL,DE
	JR	LOST
INCT	LD	A,(T)
	INC	A
	LD	L,A
	LD	(T),A
	LD	H,0
	RET
GET2	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	RET
NEXTWORD	LD	A,(HL)
	CP	20H
	INC	HL
	JR	NZ,NEXTWORD
NEXV01	LD	A,(HL)
	CP	20H
	INC	HL
	JR	Z,NEXV01
	DEC	HL
	RET
READ1	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	DE,FCB1
	CALL	READ>BY
	POP	HL
	POP	DE
	POP	BC
	RET	Z
	JP	DOSERR
WRITE2	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	DE,FCB2
	CALL	WRIT>BY
	POP	HL
	POP	DE
	POP	BC
	RET	Z
	JP	DOSERR
GETIX2	LD	L,(IX+0)
	LD	H,(IX+1)
	RET
GETIX3	LD	E,(IX+4)
	LD	D,(IX+5)
	RET
POKNTB	PUSH	DE
	EX	DE,HL
	LD	HL,(BLK2)
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(BLK2),HL
	LD	(HL),255
	INC	HL
	LD	(HL),255
	EX	DE,HL
	PUSH	AF
	LD	A,(NUM)
	INC	A
	LD	(NUM),A
	POP	AF
	POP	DE
	RET
BUBBLE	LD	A,(N)
	DEC	A
	LD	(N),A
	RET	Z
	LD	B,A
	LD	C,0
	LD	IX,BLKTBL+4
BUBV01	CALL	GETIX2
	CALL	GETIX3
	EX	DE,HL
	OR	A
	SBC	HL,DE
	JR	NC,NOSWAP
	ADD	HL,DE
	LD	(IX+0),L
	LD	(IX+1),H
	LD	(IX+4),E
	LD	(IX+5),D
	INC	IX
	INC	IX
	CALL	GETIX2
	CALL	GETIX3
	LD	(IX+0),E
	LD	(IX+1),D
	LD	(IX+4),L
	LD	(IX+5),H
	DEC	IX
	DEC	IX
	LD	C,255
NOSWAP	INC	IX
	INC	IX
	INC	IX
	INC	IX
	DJNZ	BUBV01
	LD	A,255
	CP	C
	JR	Z,BUBBLE
	RET
VDUOUT	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	0033H
	POP	HL
	POP	DE
	POP	BC
	RET
PART2	LD	HL,8000H
	LD	DE,8001H
	LD	(HL),00H
	LD	BC,11FFH
	LDIR
	LD	HL,7D00H
	LD	DE,8000H
	LD	BC,02EAH
	LDIR
	LD	HL,BUFFER1
	LD	DE,FCB1
	LD	B,0
	CALL	OPEN>EX
	JP	NZ,DOSERR
	LD	HL,BUFFER2
	LD	DE,FCB2
	LD	B,0
	CALL	OPEN>NW
	JP	NZ,DOSERR
RBLK	CALL	READ1
	CP	2
	JP	Z,P<EXEC
	CP	5
	JP	Z,P<SKIP
	CP	31
	JP	Z,P<SKIP
	CP	1
	JR	Z,ZZZV02
	PUSH	AF
	LD	HL,M>ILL
	CALL	MESS>DI
	POP	AF
	LD	B,A
	AND	0F0H
	SRL	A
	SRL	A
	SRL	A
	SRL	A
	CALL	HEX1
	LD	A,B
	AND	0FH
	CALL	HEX1
	LD	A,0DH
	CALL	33H
	JP	DOS
HEX1	CP	10
	JR	C,HEXV01
	ADD	A,7
HEXV01	ADD	A,30H
	CALL	VDUOUT
	RET
;ASSUME LOAD BLOCK AGAIN
ZZZV02	CALL	READ1	;LENGTH
	LD	(LNGTH),A
	CALL	READ1	;LSB START ADDR
	LD	L,A
	CALL	READ1	;MSB START ADDR
	LD	H,A
	LD	(STRT),HL
	LD	DE,5200H
	OR	A
	SBC	HL,DE
	JR	NC,CBLOK	;IF START>51FFH
	LD	HL,(STRT)
	LD	A,(LNGTH)
	DEC	A
	DEC	A
	LD	C,A
	LD	B,0
	JR	NZ,ZZZV01
	INC	B
ZZZV01	ADD	HL,BC	;FIND LAST ADDR USED
	DEC	HL
	LD	DE,4000H
	OR	A
	SBC	HL,DE
	JR	C,CBLOK	;IF LAST<4000H
	LD	HL,(STRT)
	LD	A,(LNGTH)
	LD	B,A
	DEC	B
	DEC	B
ODBLOK	CALL	READ1	;READ BYTE
	LD	DE,5200H
	OR	A
	SBC	HL,DE
	JR	NZ,NNBL
	PUSH	AF
	LD	A,1
	CALL	WRITE2
	LD	A,B
	INC	A
	INC	A
	CALL	WRITE2
	XOR	A
	CALL	WRITE2
	LD	A,52H
	CALL	WRITE2
	POP	AF
	JR	ODBV00
ODBV01	CALL	READ1
ODBV00	CALL	WRITE2
	DJNZ	ODBV01
	JP	RBLK
NNBL	ADD	HL,DE
	LD	DE,4000H
	ADD	HL,DE
	LD	(HL),A
	OR	A
	SBC	HL,DE
	INC	HL
	DJNZ	ODBLOK
	JP	RBLK
CBLOK	LD	A,1
	CALL	WRITE2
	LD	A,(LNGTH)
	LD	B,A
	CALL	WRITE2
	LD	HL,(STRT)
	LD	A,L
	CALL	WRITE2
	LD	A,H
	CALL	WRITE2
	DEC	B
	DEC	B
CBLV01	CALL	READ1
	CALL	WRITE2
	DJNZ	CBLV01
	JP	RBLK
P<SKIP	LD	A,5
	CALL	WRITE2
	CALL	READ1
	LD	B,A
	CALL	WRITE2
	JR	CBLV01
P<EXEC	CALL	READ1
	CALL	READ1
	LD	L,A
	CALL	READ1
	LD	H,A
	LD	(DSTART),HL
	LD	A,(NUM)
	LD	B,A
	DEC	B
	JR	NZ,GPAST
	LD	HL,BLKTBL2+6
	JP	LENOK
GPAST	LD	HL,BLKTBL2
COUNTBK	INC	HL
	INC	HL
	CALL	GET2
	PUSH	HL
	LD	HL,41FFH
	OR	A
	SBC	HL,DE
	POP	HL
	JR	NC,GNEXT
	PUSH	DE
	CALL	GET2
	POP	IX
	PUSH	HL
	PUSH	IX
	POP	HL
	EX	DE,HL
	OR	A
	SBC	HL,DE
	LD	DE,120FH
	OR	A
	SBC	HL,DE
	POP	HL
	JP	NC,LENOK
	DEC	HL
	DEC	HL
GNEXT	DJNZ	COUNTBK
	LD	HL,M>NSPAC
	CALL	MESS>DI
	LD	DE,FCB1
	CALL	CLOSE
	LD	DE,FCB2
	CALL	KILL
	JP	DOS
M>NSPAC	DEFM	'NO FREE SPACE IN MEMORY.'
	DEFB	03H
M>ILL	DEFM	'ILLEGAL BLOCK TYPE: '
	DEFB	03H
LENOK	DEC	HL
	DEC	HL
	DEC	HL
	DEC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	LD	(DLDA),HL
	LD	DE,8000H
	LD	C,18
WRBLOC	LD	A,1
	CALL	WRITE2
	LD	A,2
	CALL	WRITE2
	LD	A,L
	CALL	WRITE2
	LD	A,H
	CALL	WRITE2
	LD	B,0
WRBV01	LD	A,(DE)
	CALL	WRITE2
	INC	HL
	INC	DE
	DJNZ	WRBV01
	DEC	C
	JR	NZ,WRBLOC
	LD	A,1
	CALL	WRITE2
	LD	A,17
	CALL	WRITE2
	LD	A,L
	CALL	WRITE2
	LD	A,H
	CALL	WRITE2
	LD	B,15
	LD	HL,DUMMY
WRBLOC2	LD	A,(HL)
	CALL	WRITE2
	INC	HL
	DJNZ	WRBLOC2
	LD	A,2
	CALL	WRITE2
	LD	A,2
	CALL	WRITE2
	LD	HL,(DLDA)
	LD	DE,1200H
	ADD	HL,DE
	LD	A,L
	CALL	WRITE2
	LD	A,H
	CALL	WRITE2
	LD	DE,FCB1
	CALL	CLOSE
	LD	DE,FCB2
	CALL	CLOSE
	JP	DOS
N	DEFB	0
T	DEFB	0
NUM	DEFB	0
ST	DEFW	0
EN	DEFW	0
ST1	DEFW	0
EN1	DEFW	0
BLK2	DEFW	BLKTBL2
STRT	DEFW	0
LNGTH	DEFB	0
SAFE	DEFW	0
DEFEXT	DEFM	'CMD'
FCB1	DEFS	32
FCB2	DEFS	32
BUFFER1	DEFS	256
BUFFER2	DEFS	256
DUMMY	DI
	LD	HL,0000H
DLDA	EQU	$-2
	LD	DE,4000H
	LD	BC,1200H
	LDIR
	JP	0000H
DSTART	EQU	$-2
BLKTBL	DEFW	0
	DEFW	0
	DEFW	0
	DEFW	0
	DEFS	248
BLKTBL2	DEFW	0
	DEFW	0
	DEFW	0
	DEFW	0
	DEFS	248
	END	OFFSET
