C234567890
      PROGRAM KENNEL
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER ANSWER,DUMMY,D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS,DATA,RESULT
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      DATA=.FALSE.
      DUMMY=0
      NUMDOG=0
      NUMKEN=0
   10 CALL MENU(DATA)
      CALL SET
      IF (VALID(DUMMY)) GO TO 20
      WRITE (1,110)
      GO TO 10
   20 WRITE (1,100)
      GO TO 10
  100 FORMAT ('+ALL DOGS ASSIGNED KENNELS.')
  110 FORMAT ('+DOGS CANNOT ALL BE ASSIGNED KENNELS!')
      END
      SUBROUTINE INPUT
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
    5 WRITE (1,100)
      READ  (1,101) NUMKEN
      WRITE (1,99)
      READ  (1,101) NUMDOG
  100 FORMAT('+NUMBER OF KENNELS: ')
   99 FORMAT('+NUMBER OF BOARDERS: ')
  101 FORMAT(I2)
      WRITE (1,102) NUMKEN,NUMDOG
  102 FORMAT ('+',I3,I5)
      IF (NUMKEN.GT.39) GO TO 5
      IF (NUMDOG.GT.79) GO TO 5
      DO 95 I=1,NUMDOG
      WRITE (1,110) I
  110 FORMAT('+DOG NUMBER:',I3)
      WRITE (1,111)
  111 FORMAT('+INPUT NAME OF DOG: ')
      READ  (1,112) (NAME(J,I),J=1,8)
  112 FORMAT(8A2)
   10 WRITE (1,113)
      CALL DATE(IANS1,ID,IM,IY)
      D1(I)=ID
      M1(I)=IM
      Y1(I)=IY
      WRITE (1,114)
      CALL DATE(IANS2,ID,IM,IY)
      D2(I)=ID
      M2(I)=IM
      Y2(I)=IY
  113 FORMAT ('+INPUT DATE OF ARRIVAL:')
  114 FORMAT ('+INPUT DATE OF DEPARTURE:')
      IF (IANS1.GT.IANS2) GO TO 10
      DAYIN(I)=IANS1
      DAYOUT(I)=IANS2
   95 CONTINUE
      RETURN
      END
      SUBROUTINE DATE(IANS,D1,M1,Y1)
      INTEGER D1,M1,Y1,YRDAT(12)
      DATA YRDAT/0,31,59,90,120,151,181,212,243,273,
     X           304,334/
    5 WRITE (1,100)
      READ  (1,200) D1,M1,Y1
      IF (D1.LT.1) GO TO 5
      IF (M1.LT.1) GO TO 5
      IF (Y1.LT.83) GO TO 5
      IF (D1.GT.31) GO TO 5
      IF (M1.GT.12) GO TO 5
      IF (Y1.GT.85) GO TO 5
      IANS=365*(Y1-83)+D1+YRDAT(M1)
      RETURN
  200 FORMAT(I2,'/',I2,'/',I2)
  100 FORMAT('+ENTER DATE IN FORM DD/MM/YY: ')
      END
      SUBROUTINE SAVE
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      CALL OPEN(10,'KENNELS/DAT ',43)
      WRITE (10,101) NUMKEN,NUMDOG
  101 FORMAT ('+',2I4)
      DO 10 I=1,NUMDOG
      WRITE (10,100) (NAME(J,I),J=1,8),DAYIN(I),
     X               DAYOUT(I),D1(I),M1(I),Y1(I),
     X               D2(I),M2(I),Y2(I)
   10 CONTINUE
      ENDFILE 10
      RETURN
  100 FORMAT('+',8A2,2I4,' ',2(I2,'/'),I2,' ',
     X       2(I2,'/'),I2)
      END
      SUBROUTINE SET
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      DO 5 I=1,40
      STATUS(I)=.FALSE.
    5 CONTINUE
      DO 10 I=1,80
      DOG(I)=0
   10 CONTINUE
      RETURN
      END
      LOGICAL FUNCTION VALID(DUMMY)
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      LOGICAL STATUS,LEVEL1,LEVEL2
      INTEGER SORTED(80),SAVED,KSAVED,DUMMY,D1,M1,Y1,
     X        D2,M2,Y2
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      KSAVED=0
      CALL BUBBLE(NUMDOG,DAYIN,SORTED)
      DO 1 I=1,80
      DOG(I)=0
    1 CONTINUE
      DO 2 I=1,40
      STATUS(I)=0
    2 CONTINUE
   10 DO 40 I=1,NUMDOG
      SAVED=0
      LEVEL1=.FALSE.
      ITEMP6=NUMKEN+1
   20 DO 30 J=1,ITEMP6
      IF (LEVEL1) GO TO 30
      IF (STATUS(J)) GO TO 25
      IF (SAVED.NE.0) GO TO 23
      IF (J.LE.NUMKEN) GO TO 24
      VALID=.FALSE.
      RETURN
   24 KSAVED=J
   23 LEVEL1=.TRUE.
      GO TO 30
   25 LEVEL2=.FALSE.
      SAVE2=SAVED
      KSAVE2=KSAVED
      ITEMP=I-1
      DO 28 K=1,ITEMP
      IF (LEVEL2) GO TO 28
      ITEMP2=SORTED(K)
      ITEMP3=DOG(ITEMP2)
      IF (ITEMP3.NE.J) GO TO 28
      ITEMP3=DAYOUT(ITEMP2)
      ITEMP4=SORTED(I)
      ITEMP5=DAYIN(ITEMP4)
      IF (ITEMP3.LT.ITEMP5) GO TO 26
      LEVEL2=.TRUE.
      IF (KSAVED.NE.J) GO TO 28
      SAVED=SAVE2
      KSAVED=KSAVE2
      GO TO 28
   26 IF (ITEMP3.LE.SAVED) GO TO 28
      SAVED=ITEMP3
      KSAVED=J
   28 CONTINUE
   30 CONTINUE
      ITEMP2=SORTED(I)
      DOG(ITEMP2)=KSAVED
      STATUS(KSAVED)=.TRUE.
   40 CONTINUE
   50 CALL OUTPUT
      VALID=.TRUE.
      RETURN
      END
      SUBROUTINE OUTPUT
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      CALL OPEN (10,'OUTPUT/DAT ',64)
      DO 10 I=1,NUMDOG
      WRITE (1,100) I,(NAME(J,I),J=1,8),D1(I),M1(I),
     X              Y1(I),D2(I),M2(I),Y2(I),DOG(I)
      WRITE(10,100) I,(NAME(J,I),J=1,8),D1(I),M1(I),
     X              Y1(I),D2(I),M2(I),Y2(I),DOG(I)
   10 CONTINUE
      ENDFILE 10
      RETURN
  100 FORMAT('+DOG ',I2,' ',8A2,'FROM ',2(I2,'/'),I2,
     X       ' TO ',2(I2,'/'),I2,' FOR KENNEL ',I2,'.')
      END
      SUBROUTINE BUBBLE(NUMDOG,DAY,SORTED)
      INTEGER NUMDOG,DAYIN(80),SORTED(80),DAY(80)
      LOGICAL SWAP
      DO 1 I=1,80
      DAYIN(I)=DAY(I)
    1 CONTINUE
      DO 5 I=1,80
      SORTED(I)=I
    5 CONTINUE
      IT1=NUMDOG-1
      IF (IT1.EQ.0) RETURN
   10 SWAP=.FALSE.
      DO 25 I=1,IT1
      IT2=DAYIN(I)
      IT3=DAYIN(I+1)
      IF (IT2.LE.IT3) GO TO 25
      IT4=DAYIN(I)
      DAYIN(I)=DAYIN(I+1)
      DAYIN(I+1)=IT4
      SWAP=.TRUE.
      IT2=SORTED(I)
      SORTED(I)=SORTED(I+1)
      SORTED(I+1)=IT2
   25 CONTINUE
      IF (SWAP) GO TO 10
      RETURN
      END
      SUBROUTINE GET
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER D1,M1,Y1,D2,M2,Y2,DATE2
      LOGICAL STATUS
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      CALL OPEN(10,'KENNELS/DAT ',43)
      READ (10,101) NUMKEN,NUMDOG
  101 FORMAT (2I4)
      DO 10 I=1,NUMDOG
      READ  (10,100) (NAME(J,I),J=1,8),DAYIN(I),
     X               DAYOUT(I),D1(I),M1(I),Y1(I),
     X               D2(I),M2(I),Y2(I)
      DOG(I)=0
   10 CONTINUE
      DO 20 I=1,NUMDOG
        DAYIN(I)=DATE2(D1(I),M1(I),Y1(I))
       DAYOUT(I)=DATE2(D2(I),M2(I),Y2(I))
   20 CONTINUE
      ENDFILE 10
      RETURN
  100 FORMAT(8A2,2I4,' ',2(I2,'/'),I2,' ',2(I2,'/'),
     X       I2)
      END
      SUBROUTINE MENU(DATA)
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER SELECT,DOGNUM,D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS,DATA,SEL
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      SEL=.FALSE.
    1 CALL INPNUM(NUMDOG,NUMKEN,SELECT,SEL)
      SEL=.TRUE.
      GO TO (10,20,30,40,50,60,70,80,90,1,1100,1200,1300),SELECT
      WRITE (1,100) SELECT
  100 FORMAT('+','"',I3,'" IS AN ILLEGAL FUNCTION CODE!')
      GO TO 1
    2 WRITE (1,101)
  101 FORMAT ('+NO DATA IN MEMORY!!!')
      GO TO 1
   10 CALL GET
      DATA=.TRUE.
      GO TO 1
   20 IF (.NOT.DATA) GO TO 2
      CALL SAVE
      GO TO 1
   30 DATA=.FALSE.
      SEL=.FALSE.
      CALL INPUT
      DATA=.TRUE.
      GO TO 1
   40 IF (.NOT.DATA) GO TO 2
      IF (NUMDOG.NE.1) GO TO 41
      DATA=.FALSE.
      NUMDOG=0
      GO TO 1
   41 WRITE (1,102)
  102 FORMAT ('+DELETE WHICH NUMBER DOG: ')
      READ (1,200) DOGNUM
  200 FORMAT (I2)
      IF (DOGNUM.LT.1) GO TO 41
      IF (DOGNUM.GT.NUMDOG) GO TO 41
      IT1=NUMDOG-1
      DO 48 I=DOGNUM,IT1
      DO 45 J=1,8
      NAME(J,I)=NAME(J,I+1)
   45 CONTINUE
      DAYIN(I)=DAYIN(I+1)
      DAYOUT(I)=DAYOUT(I+1)
      DOG(I)=DOG(I+1)
      D1(I)=D1(I+1)
      M1(I)=M1(I+1)
      Y1(I)=Y1(I+1)
      D2(I)=D2(I+1)
      M2(I)=M2(I+1)
      Y2(I)=Y2(I+1)
   48 CONTINUE
      NUMDOG=IT1
      GO TO 1
   50 NUMDOG=NUMDOG+1
      DATA=.TRUE.
      SEL=.FALSE.
      WRITE (1,103) NUMDOG
  103 FORMAT ('+DOG NUMBER ',I2,'. INPUT NAME: ')
      READ (1,201) (NAME(J,NUMDOG),J=1,8)
  201 FORMAT (8A2)
   55 WRITE (1,104)
  104 FORMAT ('+INPUT ARRIVAL DATE:')
  105 FORMAT ('+INPUT DEPARTURE DATE:')
      CALL DATE(IT2,ID,IM,IY)
      D1(NUMDOG)=ID
      M1(NUMDOG)=IM
      Y1(NUMDOG)=IY
      DAYIN(NUMDOG)=IT2
      WRITE (1,105)
      CALL DATE(IT3,ID,IM,IY)
      D2(NUMDOG)=ID
      M2(NUMDOG)=IM
      Y2(NUMDOG)=IY
      DAYOUT(NUMDOG)=IT3
      IF (IT2.GT.IT3) GO TO 55
      DOG(NUMDOG)=0
      GO TO 1
   60 IF (.NOT.DATA) GO TO 2
      WRITE (1,106)
      READ (1,200) IDOG1
      WRITE (1,107)
      READ (1,200) IDOG2
  106 FORMAT ('+INPUT FIRST DOG NO. TO PRINT: ')
  107 FORMAT ('+INPUT LAST  DOG NO. TO PRINT: ')
      IF (IDOG1.LT.1) GO TO 60
      IF (IDOG2.LT.1) GO TO 60
      IF (IDOG1.GT.NUMDOG) GO TO 60
      IF (IDOG2.GT.NUMDOG) GO TO 60
      IF (IDOG1.GT.IDOG2) GO TO 60
      ICOUNT=0
      DO 68 I=IDOG1,IDOG2
      ICOUNT=ICOUNT+1
      ITE1=ICOUNT/10
      ITE2=ITE1*10
      IF (ICOUNT.NE.ITE2) GO TO 66
   65 ITA1=(PEEK(Z'3840').AND.128)
      IF (ITA1.EQ.0) GO TO 65
   66 IF (DOG(I).EQ.0) GO TO 67
      WRITE (1,198) I,(NAME(J,I),J=1,8),D1(I),M1(I),
     X              Y1(I),D2(I),M2(I),Y2(I),DOG(I)
  198 FORMAT ('+DOG ',I2,', NAME ',8A2,' FROM ',
     X   2(I2,'/'),I2,' - ',2(I2,'/'),I2,' INTO ',I2,
     X   '.')
      GO TO 68
   67 WRITE (1,108) I,(NAME(J,I),J=1,8),D1(I),M1(I),
     X              Y1(I),D2(I),M2(I),Y2(I)
  108 FORMAT ('+DOG ',I2,', NAME ',8A2,' FROM ',
     X   2(I2,'/'),I2,' - ',2(I2,'/'),I2,'.')
   68 CONTINUE
      GO TO 1
   70 IF (.NOT.DATA) GO TO 2
      WRITE (1,109)
  109 FORMAT ('+NOW ANALYSING...')
      RETURN
   80 WRITE (1,110)
  110 FORMAT ('+NOW TERMINATING PROGRAM OPERATION.')
      STOP ENDING
   90 WRITE (1,111)
      READ (1,112) NUMKEN
  111 FORMAT ('+INPUT NUMBER OF KENNELS: ')
  112 FORMAT (I2)
      GO TO 1
 1100 IF (.NOT.DATA) GO TO 2
      IM1=999
      DO 1105 I=1,NUMDOG
      IT1=DAYIN(I)
      IF (IT1.LT.IM1) IM1=IT1
 1105 CONTINUE
      IM2=0
      DO 1110 I=1,NUMDOG
      IT1=DAYOUT(I)
      IF (IT1.GT.IM2) IM2=IT1
 1110 CONTINUE
      IKEN=0
      DO 1150 I=IM1,IM2
      IKEN2=0
      DO 1160 J=1,NUMDOG
      IT1=DAYIN(J)
      IT2=DAYOUT(J)
      IF (IT1.GT.I) GO TO 1160
      IF (IT2.LT.I) GO TO 1160
      IKEN2=IKEN2+1
 1160 CONTINUE
      IF (IKEN2.GT.IKEN) IKEN=IKEN2
 1150 CONTINUE
      WRITE (1,300) IKEN
  300 FORMAT ('+MINIMUM KENNELS NEEDED IS ',I2,'.')
      GO TO 1
 1200 CALL ALLOCN
      GO TO 1
 1300 CALL SORT
      GO TO 1
      END
      SUBROUTINE INPNUM(NUMDOG,NUMKEN,SELECT,SEL)
      INTEGER SELECT,NUMDOG,NUMKEN
      LOGICAL SEL
    1 WRITE (1,99) NUMDOG,NUMKEN
      IF (SEL) GO TO 5
      WRITE (1,100)
      WRITE (1,101)
      WRITE (1,103)
      WRITE (1,105)
      WRITE (1,107)
      WRITE (1,108)
      WRITE (1,110)
      WRITE (1,111)
    5 WRITE (1,109)
      READ  (1,200) SELECT
      SEL=.FALSE.
      IF (SELECT.EQ.10) GO TO 1
      RETURN
  200 FORMAT (I2)
   99 FORMAT ('+# DOGS: ',I2,', # KENNELS: ',I2,'.')
  100 FORMAT ('+KENNEL/CMD MENU:')
  101 FORMAT ('+01) LOAD DATA FROM DISK       ',
     X        '02) SAVE DATA TO DISK')
  103 FORMAT ('+03) INPUT NEW DATA            ',
     X        '04) DELETE 1 DOGS DATA')
  105 FORMAT ('+05) INSERT 1 DOGS DATA        ',
     X        '06) PRINT RANGE OF DATA')
  107 FORMAT ('+07) ANALYSE AND REPORT        ',
     X        '08) END PROGRAM')
  108 FORMAT ('+09) SET KENNEL NUMBER         ',
     X        '10) PRINT THIS MENU AGAIN')
  110 FORMAT ('+11) FIND MINIMUM KENNELS      ',
     X         '12) PRINT KENNEL ALLOCATION')
  109 FORMAT ('+INPUT SELECTION (1-12) (10=MENU): ')
  111 FORMAT ('+13) SORT DATA IN MEMORY       ')
      END
C
      SUBROUTINE ALLOCN
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS
      INTEGER I,J,K
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
C
C
      DO 100 I=1,NUMKEN
        WRITE (2,1000) I
        DO 90 J=1,NUMDOG
          IF (DOG(J).NE.I) GO TO 90
          WRITE (2,1010) J,D1(J),M1(J),Y1(J),
     X      D2(J),M2(J),Y2(J),(NAME(K,J),K=1,8)
   90   CONTINUE
        WRITE (2,1020)
        WRITE (2,1020)
  100 CONTINUE
      RETURN
 1000 FORMAT (' ','KENNEL NUMBER ',I2)
 1010 FORMAT (' ','  ',I2,' FROM ',I2,'/',I2,'/',I2,' TO ',
     X        I2,'/',I2,'/',I2,'    (',8A2,').')
 1020 FORMAT (' ',' ')
      END
C
      INTEGER FUNCTION DATE2(D1,M1,Y1)
      INTEGER D1,M1,Y1,YRDAT(12)
      DATA YRDAT/0,31,59,90,120,151,181,212,243,273,
     X           304,334/
      DATE2=365*(Y1-83)+D1+YRDAT(M1)
      RETURN
      END
C
      SUBROUTINE SORT
      INTEGER NUMKEN,NUMDOG,NAME,DAYIN,DAYOUT,DOG
      INTEGER D1,M1,Y1,D2,M2,Y2
      LOGICAL STATUS
      INTEGER I,J,K,NUM,SORTED(80),DATA2(80)
      COMMON //NUMKEN,NUMDOG,NAME(8,80),DAYIN(80),
     X         DAYOUT(80),STATUS(40),DOG(80),D1(80),
     X         M1(80),Y1(80),D2(80),M2(80),Y2(80)
      CALL BUBBLE(NUMDOG,DAYIN,SORTED)
      DO 20 J=1,8
        DO 10 I=1,NUMDOG
          NUM=SORTED(I)
          DATA2(I)=NAME(J,NUM)
   10   CONTINUE
        DO 15 I=1,NUMDOG
          NAME(J,I)=DATA2(I)
   15   CONTINUE
   20 CONTINUE
      DO 25 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=DAYIN(NUM)
   25 CONTINUE
      DO 30 I=1,NUMDOG
        DAYIN(I)=DATA2(I)
   30 CONTINUE
      DO 35 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=DAYOUT(NUM)
   35 CONTINUE
      DO 40 I=1,NUMDOG
        DAYOUT(I)=DATA2(I)
   40 CONTINUE
      DO 45 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=DOG(NUM)
   45 CONTINUE
      DO 50 I=1,NUMDOG
        DOG(I)=DATA2(I)
   50 CONTINUE
      DO 55 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=D1(NUM)
   55 CONTINUE
      DO 60 I=1,NUMDOG
        D1(I)=DATA2(I)
   60 CONTINUE
      DO 65 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=M1(NUM)
   65 CONTINUE
      DO 70 I=1,NUMDOG
        M1(I)=DATA2(I)
   70 CONTINUE
      DO 75 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=Y1(NUM)
   75 CONTINUE
      DO 80 I=1,NUMDOG
        Y1(I)=DATA2(I)
   80 CONTINUE
      DO 85 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=D2(NUM)
   85 CONTINUE
      DO 90 I=1,NUMDOG
        D2(I)=DATA2(I)
   90 CONTINUE
      DO 92 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=M2(NUM)
   92 CONTINUE
      DO 94 I=1,NUMDOG
        M2(I)=DATA2(I)
   94 CONTINUE
      DO 96 I=1,NUMDOG
        NUM=SORTED(I)
        DATA2(I)=Y2(NUM)
   96 CONTINUE
      DO 98 I=1,NUMDOG
        Y2(I)=DATA2(I)
   98 CONTINUE
      RETURN
      END
